grammar SnippetLanguage;

// @header {
// package com.example;
// }

fragment InputCharacter: ~[\r\n\u0085\u2028\u2029];

SINGLE_LINE_DOC_COMMENT: '//' InputCharacter* -> skip;
USES: 'USES';
DOUBLE_QUOTE: '"';
DLL_NAME: IDENTIFIER '.dll';
SINGLE_STRING
    : '\'' ~('\'')+ '\''
    ;
IDENTIFIER
    :  [A-Za-z0-9./]+ 
    ;

program
    : sentences
    EOF
    ;

sentences
    : (assignSentence
    | useSentence)+
    // | ifSentence
    // | assignSentence
    ;

assignSentence
    : jsonObject
    ;

ifSentence
    : jsonObject
    ;

useSentence
    : USES '"' DLL_NAME '"' //{ NotifyErrorListeners($USES, "program must not end with semicolon!", null); }
    ;

jsonObject
    : '{' (keyValuePair (',' keyValuePair)*)? '}'
    ;

keyValuePair
    : IDENTIFIER ':' (primitive | jsonObject)
    ;

primitive
    : string
    | bool
    ;

string
    : SINGLE_STRING
    // | DOUBLE_STRING
    ;



// DOUBLE_STRING
//     : '"' ~('"')+ '"'
    // ;

bool
    : 'true'
    | 'false'
    ;

WS
    :   [ \t\r\n]+ -> skip
    ;

//UNKNOWN : . ;